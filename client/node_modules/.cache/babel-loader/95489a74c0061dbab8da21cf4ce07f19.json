{"ast":null,"code":"var _jsxFileName = \"/Users/OhWhen/Desktop/UW-GIT/In-Class-Activities/week-21/1-tuesday-mern/activities/05-Stu_ReactRouter/Unsolved/client/src/components/Grid/index.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react'; // Exporting the Container, Row, and Col components from this file\n// This Container component allows us to use a bootstrap container without worrying about class names\n\nexport function Container({\n  fluid,\n  children\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `container${fluid ? `-fluid` : ``}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }, children);\n}\nContainer.propTypes = {\n  children: PropTypes.node,\n  fluid: PropTypes.bool\n}; // This Row component lets us use a bootstrap row without having to think about class names\n\nexport function Row({\n  fluid,\n  children\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `row${fluid ? `-fluid` : ``}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  }, children);\n}\nRow.propTypes = {\n  children: PropTypes.node,\n  fluid: PropTypes.bool\n}; // This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\n\nexport function Col({\n  size,\n  children\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: size.split(` `).map(s => `col-${s}`).join(` `),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, children);\n}\nCol.propTypes = {\n  children: PropTypes.node,\n  size: PropTypes.string\n};","map":{"version":3,"sources":["/Users/OhWhen/Desktop/UW-GIT/In-Class-Activities/week-21/1-tuesday-mern/activities/05-Stu_ReactRouter/Unsolved/client/src/components/Grid/index.js"],"names":["PropTypes","React","Container","fluid","children","propTypes","node","bool","Row","Col","size","split","map","s","join","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;;AACA,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAnB,EAAwC;AAC3C,sBAAO;AAAK,IAAA,SAAS,EAAG,YAAWD,KAAK,GAAI,QAAJ,GAAe,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDC,QAAtD,CAAP;AACH;AACDF,SAAS,CAACG,SAAV,GAAsB;AAClBD,EAAAA,QAAQ,EAAEJ,SAAS,CAACM,IADF;AAElBH,EAAAA,KAAK,EAAEH,SAAS,CAACO;AAFC,CAAtB,C,CAKA;;AACA,OAAO,SAASC,GAAT,CAAa;AAAEL,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAb,EAAkC;AACrC,sBAAO;AAAK,IAAA,SAAS,EAAG,MAAKD,KAAK,GAAI,QAAJ,GAAe,EAAE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDC,QAAhD,CAAP;AACH;AACDI,GAAG,CAACH,SAAJ,GAAgB;AACZD,EAAAA,QAAQ,EAAEJ,SAAS,CAACM,IADR;AAEZH,EAAAA,KAAK,EAAEH,SAAS,CAACO;AAFL,CAAhB,C,CAKA;AACA;;AACA,OAAO,SAASE,GAAT,CAAa;AAAEC,EAAAA,IAAF;AAAQN,EAAAA;AAAR,CAAb,EAAiC;AACpC,sBACI;AACI,IAAA,SAAS,EAAEM,IAAI,CACVC,KADM,CACC,GADD,EAENC,GAFM,CAEFC,CAAC,IAAK,OAAOA,CAAE,EAFb,EAGNC,IAHM,CAGA,GAHA,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKV,QANL,CADJ;AAUH;AACDK,GAAG,CAACJ,SAAJ,GAAgB;AACZD,EAAAA,QAAQ,EAAEJ,SAAS,CAACM,IADR;AAEZI,EAAAA,IAAI,EAAEV,SAAS,CAACe;AAFJ,CAAhB","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n    return <div className={`container${fluid ? `-fluid` : ``}`}>{children}</div>;\n}\nContainer.propTypes = {\n    children: PropTypes.node,\n    fluid: PropTypes.bool\n};\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n    return <div className={`row${fluid ? `-fluid` : ``}`}>{children}</div>;\n}\nRow.propTypes = {\n    children: PropTypes.node,\n    fluid: PropTypes.bool\n};\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n    return (\n        <div\n            className={size\n                .split(` `)\n                .map(s => `col-${ s}`)\n                .join(` `)}\n        >\n            {children}\n        </div>\n    );\n}\nCol.propTypes = {\n    children: PropTypes.node,\n    size: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}